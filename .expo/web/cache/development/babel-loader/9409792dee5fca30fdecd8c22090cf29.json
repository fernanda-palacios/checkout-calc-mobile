{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/shisei/Desktop/GitRepo/CSC301/assignment-1-33-fernandapalaci-shiseru-mobile/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport firebase from \"./firebase\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemName = _useState2[0],\n      setItemName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pricePerUnit = _useState4[0],\n      setPricePerUnit = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      quantity = _useState6[0],\n      setQuantity = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newTaxPercentage = _useState8[0],\n      setNewTaxPercentage = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newDiscountPercentage = _useState10[0],\n      setNewDiscountPercentage = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      savedTaxPercentage = _useState12[0],\n      setSavedTaxPercentage = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      savedDiscountPercentage = _useState14[0],\n      setSavedDiscountPercentage = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allItems = _useState16[0],\n      setAllItems = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      subtotal = _useState18[0],\n      setSubtotal = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      total = _useState20[0],\n      setTotal = _useState20[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection(\"checkoutCalculator\").get().then(function (querySnapShot) {\n                var data = {};\n                querySnapShot.forEach(function (doc) {\n                  data[doc.id] = doc.data();\n                });\n                var dataId = 1;\n                setAllItems(data[dataId].items);\n                setSavedDiscountPercentage(data[dataId].discount_percentage);\n                setSavedTaxPercentage(data[dataId].tax_percentage);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, []);\n\n  var updateFirestoreData = function updateFirestoreData(items, discountPercentage, taxPercentage) {\n    firebase.firestore().collection(\"checkoutCalculator\").doc('1').set({\n      items: items,\n      discount_percentage: Number(discountPercentage),\n      tax_percentage: Number(taxPercentage)\n    }).then(function () {\n      console.log(\"data updated successfully\");\n    });\n  };\n\n  var calculateTotal = function calculateTotal() {\n    var subtotal = 0;\n    allItems.forEach(function (item) {\n      var itemTotal = item.pricePerUnit * item.quantity;\n      subtotal += itemTotal;\n    });\n    var tax = subtotal * (savedTaxPercentage / 100);\n    var discount = subtotal * (savedDiscountPercentage / 100);\n    var total = subtotal + tax - discount;\n    setSubtotal(subtotal);\n    setTotal(total);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"item Name : \", Object.values(allItems).map(function (data) {\n    return data['itemName'];\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"the tax percentage is \", savedDiscountPercentage), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"the discount percentage is \", savedTaxPercentage), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/shisei/Desktop/GitRepo/CSC301/assignment-1-33-fernandapalaci-shiseru-mobile/App.js"],"names":["StatusBar","React","useEffect","useState","firebase","App","itemName","setItemName","pricePerUnit","setPricePerUnit","quantity","setQuantity","newTaxPercentage","setNewTaxPercentage","newDiscountPercentage","setNewDiscountPercentage","savedTaxPercentage","setSavedTaxPercentage","savedDiscountPercentage","setSavedDiscountPercentage","allItems","setAllItems","subtotal","setSubtotal","total","setTotal","fetchData","firestore","collection","get","then","querySnapShot","data","forEach","doc","id","dataId","items","discount_percentage","tax_percentage","updateFirestoreData","discountPercentage","taxPercentage","set","Number","console","log","calculateTotal","item","itemTotal","tax","discount","styles","container","Object","values","map","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useEffect, useState} from 'react';\nimport { StyleSheet, Text, View, YellowBox } from 'react-native';\nimport firebase from './firebase';\n\nexport default function App() {\n  const [itemName, setItemName] = useState('');\n  const [pricePerUnit, setPricePerUnit] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  // values that user is editing but hasn't yet applied\n  const [newTaxPercentage, setNewTaxPercentage] = useState('');\n  const [newDiscountPercentage, setNewDiscountPercentage] = useState('');\n\n  // actual applied/saved values (these would come from the back-end)\n  const [savedTaxPercentage, setSavedTaxPercentage] = useState(0);\n  const [savedDiscountPercentage, setSavedDiscountPercentage] = useState(0);\n\n  const [allItems, setAllItems] = useState([]);\n  const [subtotal, setSubtotal] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await firebase.firestore().collection(\"checkoutCalculator\").get().then(\n          function(querySnapShot){\n            const data = {};\n            querySnapShot.forEach(function(doc) {\n              data[doc.id] = doc.data();\n            });\n            const dataId = 1;\n            setAllItems(data[dataId].items);\n            setSavedDiscountPercentage(data[dataId].discount_percentage);\n            setSavedTaxPercentage(data[dataId].tax_percentage);\n          }\n      );\n    };\n    fetchData();\n  }, []);\n\n  // If data already exists, it updates the values on data. Otherwise, it creates the new data\n  const updateFirestoreData = (items, discountPercentage, taxPercentage) => {\n    firebase.firestore().collection(\"checkoutCalculator\").doc('1').set({\n      items: items,\n      discount_percentage: Number(discountPercentage),\n      tax_percentage: Number(taxPercentage),\n    }).then(function () {\n      console.log(\"data updated successfully\");\n    })\n  };\n\n  const calculateTotal = () => {\n    let subtotal = 0\n    allItems.forEach((item) => {\n      const itemTotal = item.pricePerUnit * item.quantity\n      subtotal += itemTotal\n    })\n\n    const tax = subtotal * (savedTaxPercentage / 100)\n    const discount = subtotal * (savedDiscountPercentage / 100)\n    const total = subtotal + tax - discount\n\n    setSubtotal(subtotal)\n    setTotal(total)\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>item Name : {Object.values(allItems).map(data => data['itemName'])}</Text>\n      <Text>the tax percentage is {savedDiscountPercentage}</Text>\n      <Text>the discount percentage is {savedTaxPercentage}</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}