{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/shisei/Desktop/GitRepo/CSC301/assignment-1-33-fernandapalaci-shiseru-mobile/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB6iGj2vKINoTHilVelxZSksX3lzhL51qM\",\n  authDomain: \"checkoutpricecalculator-28abb.firebaseapp.com\",\n  databaseURL: \"https://checkoutpricecalculator-28abb.firebaseio.com\",\n  projectId: \"checkoutpricecalculator-28abb\",\n  storageBucket: \"checkoutpricecalculator-28abb.appspot.com\",\n  messagingSenderId: \"912926885493\",\n  appId: \"1:912926885493:web:c50548a2b071920e149a3c\"\n};\n\nif (firebase.app.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nYellowBox.ignoreWarnings(['Setting a timer for a long period of time']);\n\nvar _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemName = _useState2[0],\n    setItemName = _useState2[1];\n\nvar _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pricePerUnit = _useState4[0],\n    setPricePerUnit = _useState4[1];\n\nvar _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    quantity = _useState6[0],\n    setQuantity = _useState6[1];\n\nvar _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    newTaxPercentage = _useState8[0],\n    setNewTaxPercentage = _useState8[1];\n\nvar _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    newDiscountPercentage = _useState10[0],\n    setNewDiscountPercentage = _useState10[1];\n\nvar _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    savedTaxPercentage = _useState12[0],\n    setSavedTaxPercentage = _useState12[1];\n\nvar _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    savedDiscountPercentage = _useState14[0],\n    setSavedDiscountPercentage = _useState14[1];\n\nvar _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    allItems = _useState16[0],\n    setAllItems = _useState16[1];\n\nvar _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    subtotal = _useState18[0],\n    setSubtotal = _useState18[1];\n\nvar _useState19 = useState(0),\n    _useState20 = _slicedToArray(_useState19, 2),\n    total = _useState20[0],\n    setTotal = _useState20[1];\n\nuseEffect(function () {\n  var fetchData = function fetchData() {\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection(\"checkoutCalculator\").get().then(function (querySnapShot) {\n              var data = {};\n              querySnapShot.forEach(function (doc) {\n                data[doc.id] = doc.data();\n              });\n              var dataId = 1;\n              console.log(data[dataId]);\n              setAllItems(data[dataId].items);\n              setSavedDiscountPercentage(data[dataId].discount_percentage);\n              setSavedTaxPercentage(data[dataId].tax_percentage);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  fetchData();\n}, []);\nexport default function App() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, console.log('hello'), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Hello World! yeah sounds great! yes! works\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/shisei/Desktop/GitRepo/CSC301/assignment-1-33-fernandapalaci-shiseru-mobile/App.js"],"names":["StatusBar","React","useState","useEffect","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","length","initializeApp","YellowBox","ignoreWarnings","itemName","setItemName","pricePerUnit","setPricePerUnit","quantity","setQuantity","newTaxPercentage","setNewTaxPercentage","newDiscountPercentage","setNewDiscountPercentage","savedTaxPercentage","setSavedTaxPercentage","savedDiscountPercentage","setSavedDiscountPercentage","allItems","setAllItems","subtotal","setSubtotal","total","setTotal","fetchData","firestore","collection","get","then","querySnapShot","data","forEach","doc","id","dataId","console","log","items","discount_percentage","tax_percentage","App","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, YellowBox } from 'react-native';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB6iGj2vKINoTHilVelxZSksX3lzhL51qM\",\n  authDomain: \"checkoutpricecalculator-28abb.firebaseapp.com\",\n  databaseURL: \"https://checkoutpricecalculator-28abb.firebaseio.com\",\n  projectId: \"checkoutpricecalculator-28abb\",\n  storageBucket: \"checkoutpricecalculator-28abb.appspot.com\",\n  messagingSenderId: \"912926885493\",\n  appId: \"1:912926885493:web:c50548a2b071920e149a3c\"\n};\n\nif (firebase.app.length === 0){\n  firebase.initializeApp(firebaseConfig);\n}\n\nYellowBox.ignoreWarnings(['Setting a timer for a long period of time']);\n\n// using empty string as default when these are empty\n// main reason bc we are showing default value at the beginning so would show '0' for example\n// but probably better to show nothing\nconst [itemName, setItemName] = useState('');\nconst [pricePerUnit, setPricePerUnit] = useState('');\nconst [quantity, setQuantity] = useState('');\n\n// values that user is editing but hasn't yet applied\nconst [newTaxPercentage, setNewTaxPercentage] = useState('');\nconst [newDiscountPercentage, setNewDiscountPercentage] = useState('');\n\n// actual applied/saved values (these would come from the back-end)\nconst [savedTaxPercentage, setSavedTaxPercentage] = useState(0);\nconst [savedDiscountPercentage, setSavedDiscountPercentage] = useState(0);\n\nconst [allItems, setAllItems] = useState([]);\nconst [subtotal, setSubtotal] = useState(0)\nconst [total, setTotal] = useState(0)\n\n// fetch all data in firestore checkoutCalculator table and store it to local state.\nuseEffect(() => {\n  const fetchData = async () => {\n    await firebase.firestore().collection(\"checkoutCalculator\").get().then(\n        function (querySnapShot) {\n          const data = {};\n          querySnapShot.forEach(function (doc) {\n            data[doc.id] = doc.data();\n          });\n          //only data with id 1 exist.\n          const dataId = 1;\n          console.log(data[dataId]);\n          setAllItems(data[dataId].items);\n          setSavedDiscountPercentage(data[dataId].discount_percentage);\n          setSavedTaxPercentage(data[dataId].tax_percentage);\n        }\n    );\n  };\n  fetchData();\n}, []);\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      {console.log('hello')}\n      <Text>Hello World! yeah sounds great! yes! works</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}